name: Backend â€” CD

on:
  push:
    branches: [ main ]
    paths:
      - "starter/backend/**"   # only when backend changes
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: python -m pip install --upgrade pip pipenv

      - name: Install deps (dev)
        run: pipenv install --dev

      - name: Lint
        run: pipenv run lint
  
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: python -m pip install --upgrade pip pipenv

      - name: Install deps (dev)
        run: pipenv install --dev
        
      - name: Test
        run: pipenv run test

  build_and_push:
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker build (tag with git sha)
        run: docker build -t mp-backend:${{ github.sha }} .

      # Guarded: will auto-skip if creds not set yet
      - name: Configure AWS credentials
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag & Push image to ECR
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
        env:
          REGISTRY: ${{ steps.ecr.outputs.registry }}   # <acct>.dkr.ecr.<region>.amazonaws.com
          REPO:     ${{ secrets.ECR_REPO_BACKEND }}     # mp-backend
          SHA:      ${{ github.sha }}
        run: |
          docker tag mp-backend:${SHA} ${REGISTRY}/${REPO}:${SHA}
          docker push ${REGISTRY}/${REPO}:${SHA}
          echo "IMAGE_URI=${REGISTRY}/${REPO}:${SHA}" >> $GITHUB_ENV
